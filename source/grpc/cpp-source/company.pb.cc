// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: company.proto
// Protobuf C++ Version: 5.29.0

#include "company.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace CompanyEdit {

inline constexpr TotalCount::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : count_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TotalCount::TotalCount(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TotalCountDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TotalCountDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TotalCountDefaultTypeInternal() {}
  union {
    TotalCount _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TotalCountDefaultTypeInternal _TotalCount_default_instance_;

inline constexpr JsonParameters::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : jsonparams_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR JsonParameters::JsonParameters(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct JsonParametersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JsonParametersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JsonParametersDefaultTypeInternal() {}
  union {
    JsonParameters _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JsonParametersDefaultTypeInternal _JsonParameters_default_instance_;

inline constexpr CompanyUid::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CompanyUid::CompanyUid(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CompanyUidDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompanyUidDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompanyUidDefaultTypeInternal() {}
  union {
    CompanyUid _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompanyUidDefaultTypeInternal _CompanyUid_default_instance_;

inline constexpr CompanyResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : error_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CompanyResult::CompanyResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CompanyResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompanyResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompanyResultDefaultTypeInternal() {}
  union {
    CompanyResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompanyResultDefaultTypeInternal _CompanyResult_default_instance_;

inline constexpr Company::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        license_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        logo_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        server_uid_{0},
        company_type_{0},
        reg_date_{::int64_t{0}},
        joint_date_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Company::Company(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CompanyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompanyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompanyDefaultTypeInternal() {}
  union {
    Company _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompanyDefaultTypeInternal _Company_default_instance_;

inline constexpr CompanyList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : companies_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CompanyList::CompanyList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CompanyListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompanyListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompanyListDefaultTypeInternal() {}
  union {
    CompanyList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompanyListDefaultTypeInternal _CompanyList_default_instance_;
}  // namespace CompanyEdit
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_company_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_company_2eproto = nullptr;
const ::uint32_t
    TableStruct_company_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CompanyEdit::Company, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CompanyEdit::Company, _impl_.uid_),
        PROTOBUF_FIELD_OFFSET(::CompanyEdit::Company, _impl_.server_uid_),
        PROTOBUF_FIELD_OFFSET(::CompanyEdit::Company, _impl_.company_type_),
        PROTOBUF_FIELD_OFFSET(::CompanyEdit::Company, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::CompanyEdit::Company, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::CompanyEdit::Company, _impl_.reg_date_),
        PROTOBUF_FIELD_OFFSET(::CompanyEdit::Company, _impl_.joint_date_),
        PROTOBUF_FIELD_OFFSET(::CompanyEdit::Company, _impl_.license_),
        PROTOBUF_FIELD_OFFSET(::CompanyEdit::Company, _impl_.logo_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CompanyEdit::CompanyResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CompanyEdit::CompanyResult, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::CompanyEdit::CompanyResult, _impl_.error_),
        PROTOBUF_FIELD_OFFSET(::CompanyEdit::CompanyResult, _impl_.uid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CompanyEdit::CompanyList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CompanyEdit::CompanyList, _impl_.companies_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CompanyEdit::JsonParameters, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CompanyEdit::JsonParameters, _impl_.jsonparams_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CompanyEdit::CompanyUid, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CompanyEdit::CompanyUid, _impl_.uid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CompanyEdit::TotalCount, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CompanyEdit::TotalCount, _impl_.count_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::CompanyEdit::Company)},
        {17, -1, -1, sizeof(::CompanyEdit::CompanyResult)},
        {28, -1, -1, sizeof(::CompanyEdit::CompanyList)},
        {37, -1, -1, sizeof(::CompanyEdit::JsonParameters)},
        {46, -1, -1, sizeof(::CompanyEdit::CompanyUid)},
        {55, -1, -1, sizeof(::CompanyEdit::TotalCount)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::CompanyEdit::_Company_default_instance_._instance,
    &::CompanyEdit::_CompanyResult_default_instance_._instance,
    &::CompanyEdit::_CompanyList_default_instance_._instance,
    &::CompanyEdit::_JsonParameters_default_instance_._instance,
    &::CompanyEdit::_CompanyUid_default_instance_._instance,
    &::CompanyEdit::_TotalCount_default_instance_._instance,
};
const char descriptor_table_protodef_company_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\rcompany.proto\022\013CompanyEdit\"\244\001\n\007Company"
    "\022\013\n\003UID\030\001 \001(\t\022\022\n\nSERVER_UID\030\002 \001(\005\022\024\n\014COM"
    "PANY_TYPE\030\003 \001(\005\022\014\n\004NAME\030\004 \001(\t\022\017\n\007ADDRESS"
    "\030\005 \001(\t\022\020\n\010REG_DATE\030\006 \001(\003\022\022\n\nJOINT_DATE\030\007"
    " \001(\003\022\017\n\007LICENSE\030\010 \001(\t\022\014\n\004LOGO\030\t \001(\014\"<\n\rC"
    "ompanyResult\022\017\n\007success\030\001 \001(\010\022\r\n\005error\030\002"
    " \001(\t\022\013\n\003uid\030\003 \001(\t\"6\n\013CompanyList\022\'\n\tcomp"
    "anies\030\001 \003(\0132\024.CompanyEdit.Company\"$\n\016Jso"
    "nParameters\022\022\n\njsonParams\030\001 \001(\t\"\031\n\nCompa"
    "nyUid\022\013\n\003uid\030\001 \001(\t\"\033\n\nTotalCount\022\r\n\005coun"
    "t\030\001 \001(\0042\274\003\n\rCompanyEditor\022@\n\nAddCompany\022"
    "\024.CompanyEdit.Company\032\032.CompanyEdit.Comp"
    "anyResult\"\000\022A\n\013EditCompany\022\024.CompanyEdit"
    ".Company\032\032.CompanyEdit.CompanyResult\"\000\022C"
    "\n\rDeleteCompany\022\024.CompanyEdit.Company\032\032."
    "CompanyEdit.CompanyResult\"\000\022I\n\016QueryComp"
    "anies\022\033.CompanyEdit.JsonParameters\032\030.Com"
    "panyEdit.CompanyList\"\000\022D\n\021QueryCompanyBy"
    "Uid\022\027.CompanyEdit.CompanyUid\032\024.CompanyEd"
    "it.Company\"\000\022P\n\026QueryCompanyTotalCount\022\033"
    ".CompanyEdit.JsonParameters\032\027.CompanyEdi"
    "t.TotalCount\"\000b\006proto3"
};
static ::absl::once_flag descriptor_table_company_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_company_2eproto = {
    false,
    false,
    862,
    descriptor_table_protodef_company_2eproto,
    "company.proto",
    &descriptor_table_company_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_company_2eproto::offsets,
    file_level_enum_descriptors_company_2eproto,
    file_level_service_descriptors_company_2eproto,
};
namespace CompanyEdit {
// ===================================================================

class Company::_Internal {
 public:
};

Company::Company(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CompanyEdit.Company)
}
inline PROTOBUF_NDEBUG_INLINE Company::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::CompanyEdit::Company& from_msg)
      : uid_(arena, from.uid_),
        name_(arena, from.name_),
        address_(arena, from.address_),
        license_(arena, from.license_),
        logo_(arena, from.logo_),
        _cached_size_{0} {}

Company::Company(
    ::google::protobuf::Arena* arena,
    const Company& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Company* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, server_uid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, server_uid_),
           offsetof(Impl_, joint_date_) -
               offsetof(Impl_, server_uid_) +
               sizeof(Impl_::joint_date_));

  // @@protoc_insertion_point(copy_constructor:CompanyEdit.Company)
}
inline PROTOBUF_NDEBUG_INLINE Company::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : uid_(arena),
        name_(arena),
        address_(arena),
        license_(arena),
        logo_(arena),
        _cached_size_{0} {}

inline void Company::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, server_uid_),
           0,
           offsetof(Impl_, joint_date_) -
               offsetof(Impl_, server_uid_) +
               sizeof(Impl_::joint_date_));
}
Company::~Company() {
  // @@protoc_insertion_point(destructor:CompanyEdit.Company)
  SharedDtor(*this);
}
inline void Company::SharedDtor(MessageLite& self) {
  Company& this_ = static_cast<Company&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.uid_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.address_.Destroy();
  this_._impl_.license_.Destroy();
  this_._impl_.logo_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Company::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Company(arena);
}
constexpr auto Company::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Company),
                                            alignof(Company));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Company::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Company_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Company::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Company>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Company::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Company>(), &Company::ByteSizeLong,
            &Company::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Company, _impl_._cached_size_),
        false,
    },
    &Company::kDescriptorMethods,
    &descriptor_table_company_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Company::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 57, 2> Company::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CompanyEdit::Company>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string UID = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Company, _impl_.uid_)}},
    // int32 SERVER_UID = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Company, _impl_.server_uid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Company, _impl_.server_uid_)}},
    // int32 COMPANY_TYPE = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Company, _impl_.company_type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Company, _impl_.company_type_)}},
    // string NAME = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Company, _impl_.name_)}},
    // string ADDRESS = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Company, _impl_.address_)}},
    // int64 REG_DATE = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Company, _impl_.reg_date_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Company, _impl_.reg_date_)}},
    // int64 JOINT_DATE = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Company, _impl_.joint_date_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Company, _impl_.joint_date_)}},
    // string LICENSE = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Company, _impl_.license_)}},
    // bytes LOGO = 9;
    {::_pbi::TcParser::FastBS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Company, _impl_.logo_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string UID = 1;
    {PROTOBUF_FIELD_OFFSET(Company, _impl_.uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 SERVER_UID = 2;
    {PROTOBUF_FIELD_OFFSET(Company, _impl_.server_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 COMPANY_TYPE = 3;
    {PROTOBUF_FIELD_OFFSET(Company, _impl_.company_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string NAME = 4;
    {PROTOBUF_FIELD_OFFSET(Company, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ADDRESS = 5;
    {PROTOBUF_FIELD_OFFSET(Company, _impl_.address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 REG_DATE = 6;
    {PROTOBUF_FIELD_OFFSET(Company, _impl_.reg_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 JOINT_DATE = 7;
    {PROTOBUF_FIELD_OFFSET(Company, _impl_.joint_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string LICENSE = 8;
    {PROTOBUF_FIELD_OFFSET(Company, _impl_.license_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes LOGO = 9;
    {PROTOBUF_FIELD_OFFSET(Company, _impl_.logo_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\3\0\0\4\7\0\0\7\0\0\0\0\0\0\0"
    "CompanyEdit.Company"
    "UID"
    "NAME"
    "ADDRESS"
    "LICENSE"
  }},
};

PROTOBUF_NOINLINE void Company::Clear() {
// @@protoc_insertion_point(message_clear_start:CompanyEdit.Company)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uid_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.address_.ClearToEmpty();
  _impl_.license_.ClearToEmpty();
  _impl_.logo_.ClearToEmpty();
  ::memset(&_impl_.server_uid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.joint_date_) -
      reinterpret_cast<char*>(&_impl_.server_uid_)) + sizeof(_impl_.joint_date_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Company::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Company& this_ = static_cast<const Company&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Company::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Company& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:CompanyEdit.Company)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string UID = 1;
          if (!this_._internal_uid().empty()) {
            const std::string& _s = this_._internal_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "CompanyEdit.Company.UID");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 SERVER_UID = 2;
          if (this_._internal_server_uid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_server_uid(), target);
          }

          // int32 COMPANY_TYPE = 3;
          if (this_._internal_company_type() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_company_type(), target);
          }

          // string NAME = 4;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "CompanyEdit.Company.NAME");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string ADDRESS = 5;
          if (!this_._internal_address().empty()) {
            const std::string& _s = this_._internal_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "CompanyEdit.Company.ADDRESS");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // int64 REG_DATE = 6;
          if (this_._internal_reg_date() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_reg_date(), target);
          }

          // int64 JOINT_DATE = 7;
          if (this_._internal_joint_date() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<7>(
                    stream, this_._internal_joint_date(), target);
          }

          // string LICENSE = 8;
          if (!this_._internal_license().empty()) {
            const std::string& _s = this_._internal_license();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "CompanyEdit.Company.LICENSE");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // bytes LOGO = 9;
          if (!this_._internal_logo().empty()) {
            const std::string& _s = this_._internal_logo();
            target = stream->WriteBytesMaybeAliased(9, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:CompanyEdit.Company)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Company::ByteSizeLong(const MessageLite& base) {
          const Company& this_ = static_cast<const Company&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Company::ByteSizeLong() const {
          const Company& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:CompanyEdit.Company)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string UID = 1;
            if (!this_._internal_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_uid());
            }
            // string NAME = 4;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string ADDRESS = 5;
            if (!this_._internal_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_address());
            }
            // string LICENSE = 8;
            if (!this_._internal_license().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_license());
            }
            // bytes LOGO = 9;
            if (!this_._internal_logo().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_logo());
            }
            // int32 SERVER_UID = 2;
            if (this_._internal_server_uid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_server_uid());
            }
            // int32 COMPANY_TYPE = 3;
            if (this_._internal_company_type() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_company_type());
            }
            // int64 REG_DATE = 6;
            if (this_._internal_reg_date() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_reg_date());
            }
            // int64 JOINT_DATE = 7;
            if (this_._internal_joint_date() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_joint_date());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Company::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Company*>(&to_msg);
  auto& from = static_cast<const Company&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CompanyEdit.Company)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uid().empty()) {
    _this->_internal_set_uid(from._internal_uid());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (!from._internal_license().empty()) {
    _this->_internal_set_license(from._internal_license());
  }
  if (!from._internal_logo().empty()) {
    _this->_internal_set_logo(from._internal_logo());
  }
  if (from._internal_server_uid() != 0) {
    _this->_impl_.server_uid_ = from._impl_.server_uid_;
  }
  if (from._internal_company_type() != 0) {
    _this->_impl_.company_type_ = from._impl_.company_type_;
  }
  if (from._internal_reg_date() != 0) {
    _this->_impl_.reg_date_ = from._impl_.reg_date_;
  }
  if (from._internal_joint_date() != 0) {
    _this->_impl_.joint_date_ = from._impl_.joint_date_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Company::CopyFrom(const Company& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CompanyEdit.Company)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Company::InternalSwap(Company* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uid_, &other->_impl_.uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.license_, &other->_impl_.license_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.logo_, &other->_impl_.logo_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Company, _impl_.joint_date_)
      + sizeof(Company::_impl_.joint_date_)
      - PROTOBUF_FIELD_OFFSET(Company, _impl_.server_uid_)>(
          reinterpret_cast<char*>(&_impl_.server_uid_),
          reinterpret_cast<char*>(&other->_impl_.server_uid_));
}

::google::protobuf::Metadata Company::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CompanyResult::_Internal {
 public:
};

CompanyResult::CompanyResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CompanyEdit.CompanyResult)
}
inline PROTOBUF_NDEBUG_INLINE CompanyResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::CompanyEdit::CompanyResult& from_msg)
      : error_(arena, from.error_),
        uid_(arena, from.uid_),
        _cached_size_{0} {}

CompanyResult::CompanyResult(
    ::google::protobuf::Arena* arena,
    const CompanyResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CompanyResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:CompanyEdit.CompanyResult)
}
inline PROTOBUF_NDEBUG_INLINE CompanyResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : error_(arena),
        uid_(arena),
        _cached_size_{0} {}

inline void CompanyResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
CompanyResult::~CompanyResult() {
  // @@protoc_insertion_point(destructor:CompanyEdit.CompanyResult)
  SharedDtor(*this);
}
inline void CompanyResult::SharedDtor(MessageLite& self) {
  CompanyResult& this_ = static_cast<CompanyResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.error_.Destroy();
  this_._impl_.uid_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CompanyResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CompanyResult(arena);
}
constexpr auto CompanyResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CompanyResult),
                                            alignof(CompanyResult));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CompanyResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CompanyResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CompanyResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CompanyResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CompanyResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CompanyResult>(), &CompanyResult::ByteSizeLong,
            &CompanyResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CompanyResult, _impl_._cached_size_),
        false,
    },
    &CompanyResult::kDescriptorMethods,
    &descriptor_table_company_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CompanyResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 42, 2> CompanyResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CompanyEdit::CompanyResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CompanyResult, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CompanyResult, _impl_.success_)}},
    // string error = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CompanyResult, _impl_.error_)}},
    // string uid = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CompanyResult, _impl_.uid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(CompanyResult, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string error = 2;
    {PROTOBUF_FIELD_OFFSET(CompanyResult, _impl_.error_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string uid = 3;
    {PROTOBUF_FIELD_OFFSET(CompanyResult, _impl_.uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\0\5\3\0\0\0\0"
    "CompanyEdit.CompanyResult"
    "error"
    "uid"
  }},
};

PROTOBUF_NOINLINE void CompanyResult::Clear() {
// @@protoc_insertion_point(message_clear_start:CompanyEdit.CompanyResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_.ClearToEmpty();
  _impl_.uid_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CompanyResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CompanyResult& this_ = static_cast<const CompanyResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CompanyResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CompanyResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:CompanyEdit.CompanyResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string error = 2;
          if (!this_._internal_error().empty()) {
            const std::string& _s = this_._internal_error();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "CompanyEdit.CompanyResult.error");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string uid = 3;
          if (!this_._internal_uid().empty()) {
            const std::string& _s = this_._internal_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "CompanyEdit.CompanyResult.uid");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:CompanyEdit.CompanyResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CompanyResult::ByteSizeLong(const MessageLite& base) {
          const CompanyResult& this_ = static_cast<const CompanyResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CompanyResult::ByteSizeLong() const {
          const CompanyResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:CompanyEdit.CompanyResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string error = 2;
            if (!this_._internal_error().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error());
            }
            // string uid = 3;
            if (!this_._internal_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_uid());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CompanyResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CompanyResult*>(&to_msg);
  auto& from = static_cast<const CompanyResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CompanyEdit.CompanyResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error().empty()) {
    _this->_internal_set_error(from._internal_error());
  }
  if (!from._internal_uid().empty()) {
    _this->_internal_set_uid(from._internal_uid());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CompanyResult::CopyFrom(const CompanyResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CompanyEdit.CompanyResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CompanyResult::InternalSwap(CompanyResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_, &other->_impl_.error_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uid_, &other->_impl_.uid_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata CompanyResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CompanyList::_Internal {
 public:
};

CompanyList::CompanyList(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CompanyEdit.CompanyList)
}
inline PROTOBUF_NDEBUG_INLINE CompanyList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::CompanyEdit::CompanyList& from_msg)
      : companies_{visibility, arena, from.companies_},
        _cached_size_{0} {}

CompanyList::CompanyList(
    ::google::protobuf::Arena* arena,
    const CompanyList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CompanyList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:CompanyEdit.CompanyList)
}
inline PROTOBUF_NDEBUG_INLINE CompanyList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : companies_{visibility, arena},
        _cached_size_{0} {}

inline void CompanyList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CompanyList::~CompanyList() {
  // @@protoc_insertion_point(destructor:CompanyEdit.CompanyList)
  SharedDtor(*this);
}
inline void CompanyList::SharedDtor(MessageLite& self) {
  CompanyList& this_ = static_cast<CompanyList&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* CompanyList::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CompanyList(arena);
}
constexpr auto CompanyList::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CompanyList, _impl_.companies_) +
          decltype(CompanyList::_impl_.companies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CompanyList), alignof(CompanyList), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CompanyList::PlacementNew_,
                                 sizeof(CompanyList),
                                 alignof(CompanyList));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CompanyList::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CompanyList_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CompanyList::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CompanyList>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CompanyList::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CompanyList>(), &CompanyList::ByteSizeLong,
            &CompanyList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CompanyList, _impl_._cached_size_),
        false,
    },
    &CompanyList::kDescriptorMethods,
    &descriptor_table_company_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CompanyList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CompanyList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CompanyEdit::CompanyList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .CompanyEdit.Company companies = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CompanyList, _impl_.companies_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CompanyEdit.Company companies = 1;
    {PROTOBUF_FIELD_OFFSET(CompanyList, _impl_.companies_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CompanyEdit::Company>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CompanyList::Clear() {
// @@protoc_insertion_point(message_clear_start:CompanyEdit.CompanyList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.companies_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CompanyList::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CompanyList& this_ = static_cast<const CompanyList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CompanyList::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CompanyList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:CompanyEdit.CompanyList)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .CompanyEdit.Company companies = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_companies_size());
               i < n; i++) {
            const auto& repfield = this_._internal_companies().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:CompanyEdit.CompanyList)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CompanyList::ByteSizeLong(const MessageLite& base) {
          const CompanyList& this_ = static_cast<const CompanyList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CompanyList::ByteSizeLong() const {
          const CompanyList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:CompanyEdit.CompanyList)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .CompanyEdit.Company companies = 1;
            {
              total_size += 1UL * this_._internal_companies_size();
              for (const auto& msg : this_._internal_companies()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CompanyList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CompanyList*>(&to_msg);
  auto& from = static_cast<const CompanyList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CompanyEdit.CompanyList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_companies()->MergeFrom(
      from._internal_companies());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CompanyList::CopyFrom(const CompanyList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CompanyEdit.CompanyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CompanyList::InternalSwap(CompanyList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.companies_.InternalSwap(&other->_impl_.companies_);
}

::google::protobuf::Metadata CompanyList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class JsonParameters::_Internal {
 public:
};

JsonParameters::JsonParameters(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CompanyEdit.JsonParameters)
}
inline PROTOBUF_NDEBUG_INLINE JsonParameters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::CompanyEdit::JsonParameters& from_msg)
      : jsonparams_(arena, from.jsonparams_),
        _cached_size_{0} {}

JsonParameters::JsonParameters(
    ::google::protobuf::Arena* arena,
    const JsonParameters& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  JsonParameters* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:CompanyEdit.JsonParameters)
}
inline PROTOBUF_NDEBUG_INLINE JsonParameters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : jsonparams_(arena),
        _cached_size_{0} {}

inline void JsonParameters::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
JsonParameters::~JsonParameters() {
  // @@protoc_insertion_point(destructor:CompanyEdit.JsonParameters)
  SharedDtor(*this);
}
inline void JsonParameters::SharedDtor(MessageLite& self) {
  JsonParameters& this_ = static_cast<JsonParameters&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.jsonparams_.Destroy();
  this_._impl_.~Impl_();
}

inline void* JsonParameters::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) JsonParameters(arena);
}
constexpr auto JsonParameters::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(JsonParameters),
                                            alignof(JsonParameters));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull JsonParameters::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_JsonParameters_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &JsonParameters::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<JsonParameters>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &JsonParameters::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<JsonParameters>(), &JsonParameters::ByteSizeLong,
            &JsonParameters::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(JsonParameters, _impl_._cached_size_),
        false,
    },
    &JsonParameters::kDescriptorMethods,
    &descriptor_table_company_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* JsonParameters::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 45, 2> JsonParameters::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CompanyEdit::JsonParameters>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string jsonParams = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(JsonParameters, _impl_.jsonparams_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string jsonParams = 1;
    {PROTOBUF_FIELD_OFFSET(JsonParameters, _impl_.jsonparams_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\12\0\0\0\0\0\0"
    "CompanyEdit.JsonParameters"
    "jsonParams"
  }},
};

PROTOBUF_NOINLINE void JsonParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:CompanyEdit.JsonParameters)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.jsonparams_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* JsonParameters::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const JsonParameters& this_ = static_cast<const JsonParameters&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* JsonParameters::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const JsonParameters& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:CompanyEdit.JsonParameters)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string jsonParams = 1;
          if (!this_._internal_jsonparams().empty()) {
            const std::string& _s = this_._internal_jsonparams();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "CompanyEdit.JsonParameters.jsonParams");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:CompanyEdit.JsonParameters)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t JsonParameters::ByteSizeLong(const MessageLite& base) {
          const JsonParameters& this_ = static_cast<const JsonParameters&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t JsonParameters::ByteSizeLong() const {
          const JsonParameters& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:CompanyEdit.JsonParameters)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string jsonParams = 1;
            if (!this_._internal_jsonparams().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_jsonparams());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void JsonParameters::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<JsonParameters*>(&to_msg);
  auto& from = static_cast<const JsonParameters&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CompanyEdit.JsonParameters)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_jsonparams().empty()) {
    _this->_internal_set_jsonparams(from._internal_jsonparams());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JsonParameters::CopyFrom(const JsonParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CompanyEdit.JsonParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void JsonParameters::InternalSwap(JsonParameters* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.jsonparams_, &other->_impl_.jsonparams_, arena);
}

::google::protobuf::Metadata JsonParameters::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CompanyUid::_Internal {
 public:
};

CompanyUid::CompanyUid(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CompanyEdit.CompanyUid)
}
inline PROTOBUF_NDEBUG_INLINE CompanyUid::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::CompanyEdit::CompanyUid& from_msg)
      : uid_(arena, from.uid_),
        _cached_size_{0} {}

CompanyUid::CompanyUid(
    ::google::protobuf::Arena* arena,
    const CompanyUid& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CompanyUid* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:CompanyEdit.CompanyUid)
}
inline PROTOBUF_NDEBUG_INLINE CompanyUid::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : uid_(arena),
        _cached_size_{0} {}

inline void CompanyUid::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CompanyUid::~CompanyUid() {
  // @@protoc_insertion_point(destructor:CompanyEdit.CompanyUid)
  SharedDtor(*this);
}
inline void CompanyUid::SharedDtor(MessageLite& self) {
  CompanyUid& this_ = static_cast<CompanyUid&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.uid_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CompanyUid::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CompanyUid(arena);
}
constexpr auto CompanyUid::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CompanyUid),
                                            alignof(CompanyUid));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CompanyUid::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CompanyUid_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CompanyUid::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CompanyUid>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CompanyUid::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CompanyUid>(), &CompanyUid::ByteSizeLong,
            &CompanyUid::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CompanyUid, _impl_._cached_size_),
        false,
    },
    &CompanyUid::kDescriptorMethods,
    &descriptor_table_company_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CompanyUid::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 34, 2> CompanyUid::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CompanyEdit::CompanyUid>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string uid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CompanyUid, _impl_.uid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string uid = 1;
    {PROTOBUF_FIELD_OFFSET(CompanyUid, _impl_.uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\3\0\0\0\0\0\0"
    "CompanyEdit.CompanyUid"
    "uid"
  }},
};

PROTOBUF_NOINLINE void CompanyUid::Clear() {
// @@protoc_insertion_point(message_clear_start:CompanyEdit.CompanyUid)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uid_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CompanyUid::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CompanyUid& this_ = static_cast<const CompanyUid&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CompanyUid::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CompanyUid& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:CompanyEdit.CompanyUid)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string uid = 1;
          if (!this_._internal_uid().empty()) {
            const std::string& _s = this_._internal_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "CompanyEdit.CompanyUid.uid");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:CompanyEdit.CompanyUid)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CompanyUid::ByteSizeLong(const MessageLite& base) {
          const CompanyUid& this_ = static_cast<const CompanyUid&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CompanyUid::ByteSizeLong() const {
          const CompanyUid& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:CompanyEdit.CompanyUid)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string uid = 1;
            if (!this_._internal_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_uid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CompanyUid::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CompanyUid*>(&to_msg);
  auto& from = static_cast<const CompanyUid&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CompanyEdit.CompanyUid)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uid().empty()) {
    _this->_internal_set_uid(from._internal_uid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CompanyUid::CopyFrom(const CompanyUid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CompanyEdit.CompanyUid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CompanyUid::InternalSwap(CompanyUid* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uid_, &other->_impl_.uid_, arena);
}

::google::protobuf::Metadata CompanyUid::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TotalCount::_Internal {
 public:
};

TotalCount::TotalCount(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CompanyEdit.TotalCount)
}
TotalCount::TotalCount(
    ::google::protobuf::Arena* arena, const TotalCount& from)
    : TotalCount(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TotalCount::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TotalCount::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.count_ = {};
}
TotalCount::~TotalCount() {
  // @@protoc_insertion_point(destructor:CompanyEdit.TotalCount)
  SharedDtor(*this);
}
inline void TotalCount::SharedDtor(MessageLite& self) {
  TotalCount& this_ = static_cast<TotalCount&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* TotalCount::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TotalCount(arena);
}
constexpr auto TotalCount::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TotalCount),
                                            alignof(TotalCount));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TotalCount::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TotalCount_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TotalCount::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TotalCount>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TotalCount::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TotalCount>(), &TotalCount::ByteSizeLong,
            &TotalCount::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TotalCount, _impl_._cached_size_),
        false,
    },
    &TotalCount::kDescriptorMethods,
    &descriptor_table_company_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TotalCount::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> TotalCount::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CompanyEdit::TotalCount>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 count = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TotalCount, _impl_.count_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TotalCount, _impl_.count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 count = 1;
    {PROTOBUF_FIELD_OFFSET(TotalCount, _impl_.count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TotalCount::Clear() {
// @@protoc_insertion_point(message_clear_start:CompanyEdit.TotalCount)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.count_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TotalCount::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TotalCount& this_ = static_cast<const TotalCount&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TotalCount::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TotalCount& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:CompanyEdit.TotalCount)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 count = 1;
          if (this_._internal_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:CompanyEdit.TotalCount)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TotalCount::ByteSizeLong(const MessageLite& base) {
          const TotalCount& this_ = static_cast<const TotalCount&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TotalCount::ByteSizeLong() const {
          const TotalCount& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:CompanyEdit.TotalCount)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint64 count = 1;
            if (this_._internal_count() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TotalCount::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TotalCount*>(&to_msg);
  auto& from = static_cast<const TotalCount&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CompanyEdit.TotalCount)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_count() != 0) {
    _this->_impl_.count_ = from._impl_.count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TotalCount::CopyFrom(const TotalCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CompanyEdit.TotalCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TotalCount::InternalSwap(TotalCount* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.count_, other->_impl_.count_);
}

::google::protobuf::Metadata TotalCount::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace CompanyEdit
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_company_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
